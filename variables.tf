variable "url" {
  type    = string
  default = "https://anywhere.altinity.cloud"
}

variable "image" {
  description = "Custom Docker image (defaults to altinity/cloud-connect:$version)."
  type        = string
  default     = "altinity/cloud-connect:0.133.0"
}

variable "pem" {
  type        = string
  description = <<EOT
The contents of cloud-connect.pem generated by https://github.com/altinity/altinitycloud-connect login.

Omit if you want to keep the value out of Terraform state by loading certificate from AWS SSM Parameter
indicated by "pem_ssm_parameter_name" variable.
EOT
  default     = ""
}

variable "ca_crt" {
  type        = string
  description = <<EOT
Custom CA certificate to trust when connecting to the cloud using the cloud-connect service
EOT
  default     = ""
}

variable "host_aliases" {
  type        = map(string)
  description = "Host aliases for the cloud-connect EC2 instance(s)"
  default     = {}
}

variable "pem_ssm_parameter_name" {
  description = <<EOT
AWS SSM Parameter that contains cloud-connect.pem generated by https://github.com/altinity/altinitycloud-connect login.

Required if "pem" variable isn't set.
EOT
  type        = string
  default     = ""
}

variable "subnets" {
  description = <<EOT
A list of subnets (with access to the Internet) where to launch cloud-connect EC2 instance(s).

If "subnets" is empty and "use_default_subnets" is false (default), this module creates new VPC/subnets.
EOT
  type        = list(string)
  default     = []
}

variable "cidr_block" {
  description = "The CIDR block for the VPC."
  type        = string
  default     = "10.0.0.0/16"
}

variable "map_public_ip_on_launch" {
  type    = bool
  default = true
}

variable "use_default_subnets" {
  description = <<EOT
Use default subnets to launch cloud-connect EC2 instance(s).

If "subnets" is empty and "use_default_subnets" is false (default), this module creates new VPC/subnets.
EOT
  type        = bool
  default     = false
}

variable "instance_type" {
  description = "The EC2 instance type (e.g. t2.micro, t3.micro, t3.medium, t4g.micro, t4g.medium)."
  type        = string
  default     = "t3.micro"
}

variable "replicas" {
  description = "Number of altinity/cloud-connect replicas (EC2 instances)."
  type        = number
  default     = 1
  validation {
    condition     = var.replicas >= 1 && var.replicas <= 3
    error_message = "The number of replicas must be between 1 and 3."
  }
}

variable "allow_altinity_access" {
  description = "Allow Altinity access to the cloud-connect EC2 instance(s) (part of break-glass procedure)."
  type        = bool
  default     = true
}

variable "break_glass_principal" {
  type    = string
  default = "arn:aws:iam::313342380333:role/AnywhereAdmin"
}

variable "tags" {
  description = "Set of tags to apply to all resources created by this module."
  type        = map(string)
  default     = {}
}

variable "ami_name" {
  description = "The name of the AMI to use for the EC2 instance."
  type        = string
  default     = ""
}

variable "ec2_security_group_ids" {
  type        = list(string)
  default     = []
  description = "List of security group IDs to attach. If empty, the default SG is used."
}

variable "enable_permissions_boundary" {
  type        = bool
  description = "Enable permissions boundary for the IAM role."
  default     = false
}

variable "region" {
  type        = string
  description = "AWS region"
  default     = ""
}

variable "aws_account_id" {
  type        = string
  description = "AWS account ID"
  default     = ""
}

variable "external_buckets" {
  type        = list(string)
  description = "List of external S3 buckets to allow access to, only required when permissions boundary is enabled."
  default     = []
}

variable "require_imdsv2" {
  type        = bool
  description = "[EXPERIMENTAL] Whether to require IMDSv2 (Instance Metadata Service version 2) for EC2 instances."
  default     = false
}

variable "restricted_iam_permissions" {
  type        = bool
  description = "Use scoped IAM permissions instead of IAMFullAccess. When true, IAM user operations are limited to *-clickhouse-backup users only."
  default     = false
}

variable "create_user_permissions" {
  type        = bool
  description = "Create user permissions for the IAM role."
  default     = true
}